<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                             http://www.springframework.org/schema/beans/spring-beans.xsd  
                              http://www.springframework.org/schema/aop 
                             http://www.springframework.org/schema/aop/spring-aop.xsd  
                             http://www.springframework.org/schema/context 
                             http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 

<!--     <import resource="classpath*:rabbitMq.xml" /> -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <mvc:annotation-driven />

    <!-- 扫描指定package下所有带有如@controller,@services,@resource,@ods并把所注释的注册为Spring Beans -->
    <context:component-scan base-package="com.wanghao.controller" />
    
   <!--  <bean id="systemLogAspect" class="com.wanghao.listener.SystemLogAspect"></bean> -->
    <bean id="myAspect" class="com.wanghao.listener.MyAspect"></bean>
    
    <aop:config>
       <!--  定义切点 -->
        <aop:pointcut id="pointcutTarget"
                      expression="execution(* com.wanghao.controller.*.*(..))"/>
       <!--  定义切面
        pointcut-ref {切入点}
                  arg-names {joinPoint:通知函数的第一个参数 reValue:通知函数的第二个参数}
                  returning {retValue:被切函数的返回值}
                  method{通知函数} -->
                 
        <aop:aspect id="userAspect" ref="myAspect">
            <aop:after-returning
                    pointcut-ref="pointcutTarget"
                    arg-names="joinPoint,retValue"
                    returning="retValue"
                    method="afterMethod"
                    />
             <aop:before  pointcut-ref="pointcutTarget"
                    arg-names="joinPoint"
                    method="beforeMethod"
             
             />
        </aop:aspect>
    </aop:config>



    <bean name="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>











    <!-- 激活annotation功能 -->
    <context:annotation-config />
    <!-- 激活annotation功能 -->
    <context:spring-configured />
     
</beans>