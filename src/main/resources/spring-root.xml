<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                             http://www.springframework.org/schema/beans/spring-beans.xsd  
                              http://www.springframework.org/schema/aop 
                             http://www.springframework.org/schema/aop/spring-aop.xsd  
                             http://www.springframework.org/schema/context 
                             http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 

<!--     <import resource="classpath*:rabbitMq.xml" /> -->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

   <!--  <bean id="systemLogAspect" class="com.wanghao.listener.SystemLogAspect"></bean> -->
    <bean id="myAspect" class="com.wanghao.listener.MyAspect"></bean>
    <bean id="runTimeAspect" class="com.wanghao.listener.RunTimeAspect"></bean>

    <aop:config>
       <!--  定义切点 -->
       <!-- <aop:pointcut id="pointcutTarget"
                      expression="execution(* com.wanghao.controller.*.*(..))"/>
       &lt;!&ndash;  定义切面
        pointcut-ref {切入点}
                  arg-names {joinPoint:通知函数的第一个参数 reValue:通知函数的第二个参数}
                  returning {retValue:被切函数的返回值}
                  method{通知函数} &ndash;&gt;
                 
        <aop:aspect id="userAspect" ref="myAspect">
            <aop:after-returning
                    pointcut-ref="pointcutTarget"
                    arg-names="joinPoint,retValue"
                    returning="retValue"
                    method="afterMethod"
                    />
             <aop:before  pointcut-ref="pointcutTarget"
                    arg-names="joinPoint"
                    method="beforeMethod"
             
             />
        </aop:aspect>
        -->

       <aop:pointcut id="pointcutTarget"
                      expression="execution(* com.wanghao.controller.*.*(..))"/>
      
        <aop:aspect id="userAspect" ref="myAspect">
            <aop:after-returning
                    pointcut-ref="pointcutTarget"
                    arg-names="joinPoint,retValue"
                    returning="retValue"
                    method="afterMethod"
                    />
             <aop:before  pointcut-ref="pointcutTarget"
                    arg-names="joinPoint"
                    method="beforeMethod"
             
             />
        </aop:aspect>
        
        <!--定义一个切面-->
        <aop:aspect id="timeAop" ref="runTimeAspect" order="1">
            <!--定义切入点,对于每个controller的执行时间都需要执行-->
            <aop:pointcut id="timePointCut" expression="execution(* com.wanghao.service.*.*.*(..))"></aop:pointcut>
            <!--前置通知-->
            <aop:before method="timeBefore" pointcut-ref="timePointCut"></aop:before>
            <!--后置通知-->
            <aop:after method="timeAfter" pointcut-ref="timePointCut"></aop:after>
        </aop:aspect>
        
        
        
        
    </aop:config>




    <!-- 激活annotation功能 -->
    <context:annotation-config />
    <!-- 激活annotation功能 -->
    <context:spring-configured />

    <!--exclude 表明不不不不不不包含下面的controller注解-->
    <context:component-scan base-package="com.wanghao">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    
     
</beans>